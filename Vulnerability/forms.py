from django.forms import CharField, TextInput, IntegerField, forms, Textarea

from .models import Vulnerability


class VulnerabilityForm(forms.Form):
    id = IntegerField(label="Search By Vulnerability ID", required=False, widget=TextInput(
        attrs={
            'filter_field': 'id',
            'filter_method': '__exact',
            'placeholder': "1",
        }
    ))

    vulnerability_name = CharField(label="Search By Vulnerability name", required=False, widget=TextInput(
        attrs={
            'filter_field': 'name',
            'filter_method': '__iexact',
            'placeholder': "CVE-2016-7093 XSA-186",
        }
    ))

    feature_version = CharField(label="Search By Feature Version", required=False, widget=TextInput(
        attrs={
            'filter_field': 'name',
            'filter_method': '__iexact',
            'placeholder': "CVE-2016-7093 XSA-186",
        }
    ))

    namespace = CharField(label="Search By Namespace", required=False, widget=TextInput(
        attrs={
            'filter_field': 'namespace__name',
            'filter_method': '__exact',
            'placeholder': "alpine:2.1.4",
        }
    ))

    vulnerability_description = CharField(label="Search By Vulnerability Description", required=False, widget=Textarea(
        attrs={
            'rows': 3,
            'value': None,
            'filter_field': 'description',
            'filter_method': '__icontains',
            'placeholder': "A use-after-free flaw was found in D-Bus 1.12.20 when a system has multiple usernames sharing the same UID. When a set of policy rules references these usernames, D-Bus may free some memory in the heap, which is still used by data structures necessary for the other usernames sharing the UID, possibly leading to a crash or other undefined behaviors",
        }
    ))

    vulnerability_severity = CharField(label="Search By Vulnerability Severity", required=False, widget=TextInput(
        attrs={
            'filter_field': 'severity',
            'filter_method': '__iexact',
            'placeholder': "Critical, High ,Medium, Low ,Negligible ,Unknown",
        }
    ))

    vulnerability_link = CharField(label="Search By Vulnerability link", required=False, widget=TextInput(
        attrs={
            'filter_field': 'link',
            'filter_method': '__exact',
            'placeholder': "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-7093 XSA-186",
        }
    ))

    vulnerability_severity_source = CharField(label="Search By Vulnerability Severity Source", required=False,
                                              widget=TextInput(
                                                  attrs={
                                                      'filter_field': 'severity_source',
                                                      'filter_method': '__exact',
                                                      'placeholder': "alpine:2.1.4",
                                                  }
                                              ))

    vulnerability_metadata = CharField(label="Search By Vulnerability Metadata", required=False, widget=Textarea(
        attrs={
            'rows': 3,
            'filter_field': 'metadata',
            'filter_method': '__icontains',
            'placeholder': '''{"NVD":{"CVSSv2":{"PublishedDateTime":"2019-09-12T20:15Z","Vectors":"AV:A/AC:L/Au:N/C:N/I:N/A:P","Score":3.3},"CVSSv3":{"Vectors":"CVSS:3.0/AV:A/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H","Score":6.5,"ExploitabilityScore":2.8,"ImpactScore":3.6}}}''',
        }
    ))

    vulnerability_created_at = CharField(label="Search By Vulnerability Created At", required=False, widget=TextInput(
        attrs={
            'filter_field': 'created_at',
            'filter_method': '__date',
            'placeholder': "yyyy-mm-dd hh:mm:ss",
        }
    ))

    vulnerability_created_before = CharField(label="Search By Vulnerability Created before", required=False,
                                             widget=TextInput(
                                                 attrs={
                                                     'filter_field': 'created_at',
                                                     'filter_method': '__lte',
                                                     'placeholder': "yyyy-mm-dd hh:mm:ss",
                                                 }
                                             ))

    vulnerability_created_after = CharField(label="Search By Vulnerability Created After", required=False,
                                            widget=TextInput(
                                                attrs={
                                                    'filter_field': 'created_at',
                                                    'filter_method': '__gte',
                                                    'placeholder': "yyyy-mm-dd hh:mm:ss",
                                                }
                                            ))

    vulnerability_deleted_at = CharField(label="Search By Vulnerability Deleted At", required=False, widget=TextInput(
        attrs={
            'filter_field': 'deleted_at',
            'filter_method': '__date',
            'placeholder': "yyyy-mm-dd hh:mm:ss",
        }
    ))

    vulnerability_deleted_is_null = CharField(label="Search By Vulnerability Deleted is null", required=False, widget=TextInput(
        attrs={
            'filter_field': 'deleted_at',
            'filter_method': '__isnull',
            'placeholder': "True or False (Case Does not Matter)",
        }
    ))

    vulnerability_deleted_before = CharField(label="Search By Vulnerability Deleted Before", required=False,
                                             widget=TextInput(
                                                 attrs={
                                                     'filter_field': 'deleted_at',
                                                     'filter_method': '__lte',
                                                     'placeholder': "yyyy-mm-dd hh:mm:ss",
                                                 }
                                             ))

    vulnerability_deleted_after = CharField(label="Search By Vulnerability Deleted After", required=False,
                                            widget=TextInput(
                                                attrs={
                                                    'filter_field': 'deleted_at',
                                                    'filter_method': '__gte',
                                                    'placeholder': "yyyy-mm-dd hh:mm:ss",
                                                }
                                            ))

    class Meta:
        model = Vulnerability
        fields = '__all__'
        model._meta.fields[0].verbose_name = "Vulnerability ID"
